var frequency = require("frequency");

// function frequency(population) {
//   let buckets = {};

//   for (let i = 0; i < 21; i++) {
//     buckets[i] = 0;
//   }

//   // bars represent 5% saturation increase
//   population.forEach( function(n) { buckets[Math.round(n / 12.75)]++ });

//   result = [];

//   for (key in buckets) {
//     let obj = {};
//     obj["percent"] = key * 5;
//     obj["frequency"] = buckets[key] / population.length;
//     result.push(obj);
//   }

//   return result;
// }


// var starting = [154, 93, 23, 87, 25, 59, 87, 67, 184, 46, 106, 175, 198, 87, 190, 118, 25, 189, 6, 230, 214, 53, 238, 202, 167, 147, 59, 184, 96, 194, 195, 224, 44, 12, 139, 109, 19, 99, 50, 128, 170, 113, 123, 79, 45, 198, 243, 138, 1, 9, 32, 5, 102, 79, 129, 243, 66, 39, 149, 105, 177, 241, 230, 162, 115, 97, 135, 42, 36, 223, 109, 84, 9, 184, 184, 149, 220, 81, 141, 100, 81, 140, 198, 70, 233, 181, 213, 214, 53, 211, 195, 43, 130, 18, 150, 250, 136, 172, 230, 140, 121, 78, 87, 246, 171, 7, 149, 124, 143, 137, 230, 100, 28, 135, 192, 92, 133, 64, 189, 246, 197, 6, 255, 124, 17, 175, 241, 189, 90, 113, 80, 201, 206, 211, 9, 43, 107, 25, 240, 29, 121, 163, 74, 197, 72, 79, 237, 79, 239, 43, 42, 194, 164, 132, 146, 108, 137, 146, 52, 227, 142, 58, 91, 107, 21, 126, 80, 55, 83, 129, 81, 207, 232, 250, 183, 103, 34, 185, 159, 93, 245, 115, 31, 209, 228, 111, 90, 134, 165, 41, 170, 252, 117, 64, 253, 195, 225, 114, 46, 213, 126, 151, 100, 119, 247, 85, 170, 197, 21, 204, 29, 198, 54, 229, 232, 71, 183, 207, 29, 79, 21, 171, 214, 226, 241, 229, 247, 197, 231, 220, 208, 11, 131, 211, 210, 191, 254, 117, 209, 34, 198, 179, 196, 121, 61, 37, 138, 252, 242, 76, 199, 91, 132, 77, 71, 177, 137, 109, 214, 181, 229, 65, 255, 15, 95, 113, 254, 232, 147, 102, 182, 105, 239, 64, 85, 231, 254, 143, 163, 189, 9, 210, 190, 69, 33, 158, 52, 224, 28, 140, 179, 178, 82, 128, 172, 154, 14, 144, 46, 43, 233, 41, 41, 220, 171, 165, 176, 196, 80, 98, 24, 146, 48, 8, 11, 65, 114, 193, 58, 217, 149, 13, 52, 134, 76, 34, 122, 242, 160, 102, 98, 193, 94, 211, 231, 25, 227, 117, 219, 42, 74, 74, 221, 70, 22, 30, 74, 55, 189, 4, 2, 106, 88, 21, 237, 149, 162, 50, 81, 43, 49, 60, 145, 126, 243, 121, 22, 78, 241, 171, 254, 128, 20, 157, 108, 176, 7, 180, 57, 189, 206, 230, 229, 117, 61, 206, 205, 28, 218, 196, 217, 169, 73, 50, 186, 120, 92, 217, 94, 237, 33, 157, 137, 211, 187, 133, 218, 5, 187, 252, 76, 113, 103, 12, 28, 47, 63, 198, 243, 35, 41, 90, 88, 109, 65, 6, 254, 174, 222, 136, 108, 134, 74, 170, 49, 34, 204, 228, 84, 133, 213, 14, 236, 92, 76, 69, 56, 163, 249, 230, 117, 93, 79, 108, 32, 145, 254, 211, 174, 250, 75, 13, 230, 40, 202, 93, 35, 159, 154, 71, 203, 27, 162, 240, 149, 138, 168, 241, 62, 195, 31, 199, 167, 137, 150, 13, 185, 84, 4, 238, 206, 122, 31, 173, 82, 233, 10, 214, 23, 29, 40, 230, 66, 97, 88, 136, 112, 111, 105, 164, 63, 52, 64, 172, 221, 91, 41, 59, 3, 53, 22, 126, 252, 113, 164, 172, 221, 161, 63, 47, 125, 224, 253, 110, 96, 115, 180, 214, 9, 198, 55, 119, 20, 104, 168, 246, 237, 77, 62, 210, 229, 202, 74, 82, 29, 33, 154, 230, 172, 126, 234, 114, 110, 37, 221, 25, 235, 116, 132, 163, 187, 202, 109, 29, 224, 219, 7, 63, 183, 138, 167, 54, 208, 47, 152, 67, 101, 66, 201, 34, 104, 184, 186, 47, 131, 90, 52, 128, 23, 155, 52, 90, 161, 182, 168, 138, 173, 159, 131, 37, 92, 59, 81, 223, 176, 205, 142, 132, 89, 248, 81, 224, 225, 49, 230, 98, 126, 121, 173, 60, 117, 163, 209, 103, 194, 39, 10, 149, 166, 170, 32, 142, 110, 138, 232, 99, 180, 136, 111, 238, 24, 28, 149, 4, 179, 143, 3, 242, 8, 219, 16, 26, 200, 62, 157, 186, 156, 148, 151, 100, 168, 6, 135, 186, 106, 241, 109, 15, 15, 183, 195, 249, 21, 75, 122, 179, 209, 2, 233, 195, 130, 48, 213, 108, 172, 251, 51, 161, 194, 200, 92, 253, 116, 99, 143, 107, 225, 72, 186, 129, 18, 207, 32, 94, 214, 160, 116, 74, 27, 186, 247, 29, 147, 252, 116, 228, 228, 77, 151, 116, 24, 126, 3, 230, 136, 56, 71, 174, 152, 193, 242, 205, 35, 13, 131, 233, 122, 126, 175, 56, 58, 126, 241, 192, 80, 162, 1, 183, 23, 17, 86, 210, 161, 135, 235, 56, 118, 198, 188, 184, 26, 98, 60, 141, 184, 193, 36, 130, 93, 79, 45, 71, 230, 10, 5, 78, 140, 86, 108, 241, 5, 107, 66, 19, 117, 94, 51, 120, 233, 63, 254, 196, 96, 240, 117, 190, 238, 67, 243, 21, 12, 90, 116, 200, 110, 179, 230, 200, 43, 21, 95, 157, 143, 205, 88, 200, 10, 195, 77, 202, 12, 217, 244, 42, 216, 106, 73, 152, 117, 110, 35, 131, 240, 159, 140, 41, 62, 40, 32, 245, 65, 21, 40, 217, 42, 221, 57, 188, 129, 201, 244, 124, 196, 240, 157, 114, 241, 177, 18, 68, 181, 146, 177, 78, 70, 64, 11, 105, 101, 116, 198, 163, 189, 6, 20, 28, 136, 221, 173, 181, 229, 181, 213, 123, 174, 39, 201, 164, 219, 237, 117, 24, 135, 239, 76, 48, 98, 255, 246, 96, 43, 84, 108, 108, 48, 114, 250, 216, 50, 24, 53, 129, 190, 252, 75, 193, 5, 83, 114, 79, 20, 245, 245, 185, 116, 61, 11, 78, 139, 159, 126, 205, 175, 27, 212, 105, 85, 155, 68, 192, 152, 138, 147, 42, 129, 193, 214, 29, 3, 71, 60, 139, 244, 186, 174, 223, 122, 94, 50, 25, 203, 117, 132, 186, 169, 61, 37, 131, 222, 19, 193, 46, 133, 219, 195, 4, 84, 93, 19, 153, 122, 164, 192, 101, 4, 37, 16, 3, 101, 150]

// var ending = [224, 229, 224, 229, 237, 196, 237, 236, 245, 236, 228, 237, 228, 230, 228, 225, 232, 225, 240, 229, 224, 229, 196, 196, 233, 244, 225, 226, 228, 232, 224, 225, 228, 253, 225, 226, 229, 228, 229, 229, 228, 228, 237, 232, 228, 228, 236, 229, 228, 228, 229, 228, 228, 229, 196, 235, 229, 236, 229, 248, 224, 225, 225, 228, 230, 229, 204, 229, 224, 245, 229, 225, 224, 229, 228, 238, 229, 252, 228, 229, 231, 229, 245, 228, 228, 229, 197, 224, 228, 225, 224, 199, 232, 224, 227, 230, 225, 233, 228, 237, 229, 229, 228, 229, 224, 228, 228, 230, 225, 225, 228, 225, 230, 225, 229, 228, 228, 233, 245, 225, 224, 225, 229, 224, 228, 225, 225, 197, 228, 228, 236, 224, 224, 236, 229, 226, 230, 229, 228, 228, 224, 228, 229, 230, 232, 232, 228, 224, 224, 236, 228, 230, 225, 232, 224, 228, 229, 225, 224, 229, 236, 233, 236, 229, 229, 225, 229, 229, 224, 231, 228, 227, 224, 229, 224, 229, 232, 228, 229, 197, 236, 225, 237, 226, 241, 228, 225, 228, 232, 238, 228, 228, 234, 229, 224, 234, 197, 225, 229, 229, 197, 224, 236, 225, 224, 228, 236, 232, 226, 248, 230, 236, 228, 197, 229, 232, 236, 228, 236, 225, 224, 229, 237, 225, 229, 229, 228, 232, 229, 100, 232, 224, 229, 224, 245, 228, 228, 229, 232, 225, 227, 233, 232, 229, 225, 228, 224, 229, 228, 228, 228, 224, 228, 228, 244, 228, 224, 228, 228, 225, 225, 224, 197, 229, 228, 229, 228, 236, 228, 228, 229, 235, 236, 228, 229, 228, 227, 232, 229, 229, 252, 230, 224, 246, 228, 225, 244, 224, 252, 224, 229, 228, 228, 229, 233, 229, 229, 224, 236, 229, 228, 229, 227, 229, 228, 226, 228, 233, 229, 224, 235, 228, 225, 229, 236, 232, 229, 229, 236, 232, 229, 224, 228, 228, 237, 232, 232, 225, 236, 224, 236, 228, 228, 225, 228, 228, 232, 228, 224, 228, 237, 237, 225, 236, 228, 225, 229, 228, 225, 228, 228, 231, 230, 225, 224, 232, 236, 227, 224, 224, 232, 236, 229, 236, 232, 237, 225, 228, 228, 229, 252, 224, 228, 237, 199, 229, 225, 233, 229, 225, 229, 224, 228, 229, 239, 236, 225, 226, 228, 228, 228, 237, 228, 225, 236, 224, 230, 228, 228, 237, 224, 229, 229, 229, 225, 236, 237, 224, 229, 231, 197, 228, 232, 225, 229, 228, 236, 236, 231, 228, 225, 228, 229, 228, 231, 230, 228, 228, 228, 232, 225, 197, 228, 196, 224, 229, 229, 224, 232, 229, 241, 225, 228, 231, 236, 228, 228, 236, 196, 225, 228, 228, 229, 229, 225, 244, 225, 207, 232, 224, 241, 231, 237, 228, 224, 224, 204, 228, 229, 230, 229, 228, 224, 228, 228, 236, 224, 232, 226, 229, 228, 225, 228, 245, 228, 237, 224, 228, 228, 232, 229, 168, 225, 228, 236, 229, 205, 236, 224, 229, 236, 204, 225, 237, 242, 228, 236, 224, 232, 228, 236, 225, 224, 230, 229, 224, 228, 224, 232, 225, 225, 236, 228, 229, 228, 225, 224, 168, 228, 230, 228, 237, 228, 237, 229, 228, 232, 236, 229, 225, 236, 228, 224, 225, 192, 225, 228, 229, 200, 244, 225, 225, 224, 228, 233, 228, 224, 225, 229, 225, 192, 225, 236, 230, 229, 229, 234, 229, 232, 224, 240, 230, 229, 228, 245, 226, 229, 248, 228, 228, 229, 229, 231, 228, 228, 236, 224, 228, 237, 232, 229, 224, 224, 199, 228, 238, 230, 228, 228, 232, 229, 231, 228, 224, 228, 229, 228, 229, 224, 244, 229, 236, 229, 196, 236, 228, 236, 236, 229, 229, 193, 236, 229, 236, 244, 228, 224, 229, 229, 237, 224, 228, 229, 228, 229, 233, 228, 228, 225, 236, 229, 228, 229, 228, 228, 224, 237, 229, 225, 237, 227, 224, 233, 228, 196, 228, 228, 229, 229, 229, 230, 237, 228, 228, 224, 228, 196, 229, 225, 225, 224, 216, 244, 197, 236, 227, 229, 229, 228, 226, 233, 232, 228, 228, 197, 225, 225, 240, 228, 229, 229, 204, 225, 233, 229, 245, 229, 228, 228, 229, 225, 225, 193, 232, 228, 228, 244, 228, 230, 224, 228, 230, 228, 228, 236, 228, 236, 224, 224, 224, 232, 228, 225, 212, 228, 236, 224, 228, 224, 228, 233, 228, 229, 228, 233, 236, 225, 224, 224, 233, 231, 230, 233, 229, 224, 225, 230, 224, 229, 229, 230, 236, 236, 227, 229, 224, 229, 224, 228, 236, 237, 228, 196, 228, 205, 230, 228, 228, 232, 228, 252, 228, 237, 236, 237, 232, 236, 226, 228, 228, 229, 230, 224, 238, 224, 228, 224, 228, 228, 225, 229, 228, 224, 228, 228, 228, 229, 229, 228, 236, 230, 236, 225, 228, 229, 228, 237, 228, 197, 224, 231, 228, 228, 228, 229, 229, 225, 228, 225, 226, 193, 228, 229, 228, 228, 224, 229, 224, 205, 228, 225, 193, 228, 228, 228, 224, 229, 224, 229, 228, 225, 225, 224, 228, 228, 228, 224, 228, 225, 228, 229, 228, 229, 229, 224, 236, 224, 228, 228, 224, 233, 229, 229, 228, 224, 226, 233, 164, 224, 233, 161, 197, 228, 228, 228, 232, 226, 229, 229, 237, 228, 236, 236, 236, 224, 252, 196, 228, 245, 224, 225, 224, 229, 233, 228, 224, 229, 228, 224, 236, 229, 228, 230, 225, 224, 237, 229, 228, 224, 224, 228, 225, 237, 224, 236, 232, 225, 229, 224, 228, 228, 228, 226, 228, 228, 224, 225, 232, 237, 234, 224, 224, 228, 236, 228, 228, 225, 225, 229, 197, 231, 230, 229, 229, 224, 229, 228, 228, 224, 225, 230, 228, 227, 228, 236, 225, 228, 229, 232, 244, 226, 247, 228, 229, 225, 244, 228, 225, 225, 228, 237, 229, 225, 224, 233, 228, 224, 253, 237, 224, 207, 227, 230, 224, 228, 236, 228, 229, 228, 229, 229, 224, 225, 236, 229, 229, 225, 225, 229, 225]

// var starting_data = frequency(starting);

// var ending_data = frequency(ending);

// var environ = (Math.round(223/12.75)) * 5;


// ----------------------------------------------------------- //


var margin = {top: 80, right: 80, bottom: 80, left: 80},
    width = 700 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


var x = d3.scaleBand()
  .rangeRound([0, width]);

var y = d3.scaleLinear()
  .range([height, 0]);

var y1 = d3.scaleLinear()
  .range([height, 0]);

var xAxis = d3.axisBottom(x);
var yAxis = d3.axisLeft(y).ticks(10, "%");

var chart = d3.select(".chart")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

x.domain(starting_data.map(function(d) { return d.percent; }));
y.domain([0, (d3.max(ending_data, function(d) { return d.frequency; }) + .03)]);

var barWidth = (width - 150) / starting_data.length;

chart.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

chart.append("g")
    .attr("class", "y axis axisLeft")
    .attr("transform", "translate(0,0)")
    .call(yAxis)
  .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Frequency");

chart.append("rect")
  .attr("class", "envLine")
  .attr("filter", "url(#f1)")
  .attr("x", x(environ))
  .attr("y", "0")
  .attr("height", height)
  .attr("width", "20");

var bar = chart.selectAll(".bar1")
    .data(starting_data)
  .enter().append("rect")
    .attr("class", "bar bar1")
    .attr("x", function(d) { return x(d.percent); })
    .attr("y", function(d) { return y(d.frequency); })
    .attr("height", function(d) { return height - y(d.frequency); })
    .attr("width", barWidth/2);

var bar = chart.selectAll(".bar2")
    .data(ending_data)
  .enter().append("rect")
    .attr("class", "bar bar2")
    .attr("x", function(d) { return x(d.percent) + (barWidth/2) + 1; })
    .attr("y", function(d) { return y(d.frequency); })
    .attr("height", function(d) { return height - y(d.frequency); })
    .attr("width", barWidth/2);

bar.append("text")
    .attr("x", barWidth)
    .attr("y", function(d) { return y(d.frequency) + 3; })
    .attr("dy", ".75em")
    .text(function(d) { return d.frequency; });

var colorAxis = chart.selectAll(".saturation")
    .data(starting_data)
  .enter().append("rect")
    .attr("class", function(d) { return "saturation percent" + d.percent})
    .attr("x", function(d) { return x(d.percent) - 2.5; })
    .attr("y", height)
    .attr("height", "20")
    .attr("width", "25");
